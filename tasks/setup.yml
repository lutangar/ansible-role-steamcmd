---

- name: create directory for SteamCMD app
  file:
    path: '{{ steamcmd_directory }}'
    state: directory
    recurse: yes

- name: create legacy directory for older apps
  file:
    path: '{{ steamcmd_user_home }}.steam/sdk32/'
    state: directory
    recurse: yes

- name: download SteamCMD for Linux
  get_url:
    url: https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
    dest: '{{ steamcmd_directory }}steamcmd_linux.tar.gz'
    force: yes
    headers: 'User-Agent: lutangar/ansible-role-steamcmd'
    validate_certs: no

- name: extract the contents to cmd directory
  unarchive:
    src: '{{ steamcmd_directory }}steamcmd_linux.tar.gz'
    dest: '{{ steamcmd_directory }}'
    copy: no

- name: attempt to log into steam
  command: '{{ steamcmd_directory }}steamcmd.sh +login {{ steamcmd_steam.username }} {{ steamcmd_steam.password }} +quit'
  async: '{{ steamcmd_login_timeout}}'
  poll: 5
  register: steam_login
  no_log: yes
  when: steamcmd_steam.guard == 'unset'

- name: attempt to log into steam w/guard code
  command: '{{ steamcmd_directory }}steamcmd.sh +set_steam_guard_code {{steamcmd_steam.guard}} +login {{ steamcmd_steam.username }} {{ steamcmd_steam.password }} +quit'
  async: '{{ steamcmd_login_timeout}}'
  poll: 5
  register: steam_login
  no_log: yes
  when: steamcmd_steam.guard != 'unset'

- name: linking steamclient.so to the ~/.steam/sdk32/steamclient.so directory
  file:
    src: '{{ steamcmd_directory }}linux32/steamclient.so'
    dest: '{{ steamcmd_user_home }}.steam/sdk32/steamclient.so'
    state: link
    creates: yes
  when: steam_login.stdout.find('unable to locate a running instance of Steam, or a local steamclient.dll') != -1
